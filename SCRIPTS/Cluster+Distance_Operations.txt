(*距離行列から特定のクラスタに関する部分距離行列を抜き出す*)
subDMat[dmat_,members_]:=
  Transpose[Transpose[dmat[[members]]][[members]]]

(*部分距離行列をもとに特定のクラスタのargminを求める*)
argMinDMat[dmat_]:=Module[{sumList},
  sumList=Map[Tr[#]&,dmat];
  Position[sumList,Min[sumList]][[1]]
]

(*距離行列とクラスタリング結果から各クラスタのmedoidを求める*)
findMedoidsParCL[dmat_,clusterResult_]:=
  Map[argMinDMat[subDMat[dmat,#]]&,clusterResult]

(*各クラスタのmedoid番号からもとのサンプル番号を求める*)
orgIndexFromMedoidParCL[clusterResult_,medoids_]:=Module[{l,fmedoids},
  l=Length[medoids];
  fmedoids=Flatten[medoids];
  Table[clusterResult[[i]][[medoids[[i]]]],{i,l}]
]

(*距離行列とクラスタリング結果から各クラスタの部分距離行列を求める*)
clDmat[dmat_,cls_]:=
  Map[subDMat[dmat,#]&,cls]

(*行列から対角行列をdropする -> サイズは縮小*)
dropDiagonal[mat_]:=
  Table[Drop[mat[[n]],{n}],{n,Length[mat]}]


(*各クラスタのMSTを得るために複数のファイルを読み込む*)
readMSTFiles[dir_, fileHead_, suffix_, numCLs_] := Module[
  {targetDir, targetFileNames},
  targetDir = 
    If[StringLength[dir] == 0, targetDir = dir, targetDir = dir <> "/"];
  targetFileNames = 
    Table[targetDir <> fileHead <> ToString[i] <> suffix, {i, numCLs}];
  Print[targetFileNames];
  Map[Import[#, "Table"] &, targetFileNames]
]

(*指標*)
(*各クラスタのMSTと全体のMSTを使ったpi指標の変形*)
mstPi[mst_List, mstm_, cls_] := Module[
  {k, numMems, mstmaxs, MSTmmin},
  k = Length[cls];
  numMems = Map[Length[#] &, cls];
  mstmaxs = Map[Max[#] &, Map[#[[-1]] &, mst, {2}]];
  MSTmmin = Min[Map[#[[-1]] &, mstm]];
  k Inner[Power, numMems, mstmaxs/MSTmmin, Times]
]

